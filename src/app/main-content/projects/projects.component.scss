@import "./../../../styles.scss";

:host {
  @include respond-to(tablet-landscape) {
    height: auto !important;
  }
}

#projects {
  background-color: $cream;
  @include respond-to(tablet-landscape) {
    height: auto;
  }
}

.contentMainComponent {
  padding-bottom: 12.22dvh;
  @include dFlex($jc: space-between, $ai: flex-start);
  flex-direction: column;
  @include respond-to(tablet-landscape) {
    gap: 32px;
    padding-left: 7vw;
    padding-right: 7vw;
    > div {
      flex-direction: column;
    }
  }
  @include respond-to(mobile-portrait) {
    padding: 80px 16px;
  }
  @include respond-to(mobile-landscape) {
    padding: 12dvh 7vw 8dvh;
  }
}

.projectsUpperArea {
  color: $black;
  @include dFlex($jc: flex-start, $g: 5vw);
  h2 {
    white-space: nowrap;
  }
  span {
    width: 37vw;
  }
  @include respond-to(tablet-landscape) {
    gap: 0;
    align-items: flex-start;
    width: 100%;
    span {
      width: auto;
    }
  }
}

.projectsLowerArea {
  @include dFlex($jc: space-between);
  width: 100%;
  height: 54.22dvh;
  @include respond-to(tablet-landscape) {
    height: auto;
    justify-content: flex-start;
    gap: 32px;
    .projectsGraphicRepresentation {
      width: 100%;
      aspect-ratio: 1;
    }
    .projectsLowerAreaRightArea {
      margin: 0;
    }
  }
}

.projectsGraphicRepresentation {
  border-radius: $borderRadius;
  border: 1px solid $black;
  height: 100%;
  width: 34vw;
  position: relative;
  @include dFlex();
  transition: background-color 200ms ease;
  ::ng-deep app-hexagon {
    height: 37%;
    aspect-ratio: 1;
    position: absolute;
    bottom: 0.5dvh;
    left: 0.5dvh;
    svg {
      animation: rotate 7s linear infinite;
      height: 100%;
      width: 100%;
      polygon {
        transition: stroke 200ms ease, fill 200ms ease;
      }
    }
  }
  .fadeWrapper {
    width: 85%;
    aspect-ratio: 1860 / 1080;
    img {
      border-radius: $borderRadius;
      z-index: 10;
      width: 100%;
    }
  }
}

.projectsLowerAreaRightArea {
  flex: 1;
  margin: 3.67dvh 2.78vw;
  @include dFlex();
  gap: clamp(32px, 3.56dvh, 3.56dvh);
  flex-direction: column;
}

.projectInformations {
  height: 41dvh;
  max-height: 340px;
  width: 100%;
  background-color: $black;
  border-radius: $borderRadius;
  @include dFlex($g: 3.56dvh, $ai: flex-start);
  flex-direction: column;
  color: $cream;
  padding: 0 2.22vw;
  box-sizing: border-box;
  @include respond-to(tablet-landscape) {
    height: auto;
    padding: clamp(16px, 2.22vw, 32px);
  }
}

.readableProjectInformations {
  @include dFlex($ai: flex-start);
  gap: clamp(16px, 1.78dvh, 1.78dvh);
  flex-direction: column;
  width: 100%;
  > span:nth-child(2) {
    color: $lightBlue;
  }
}

.headerProjectInformations {
  position: relative;
  @include dFlex($jc: space-between);
  width: 100%;
  .fadeWrapper {
    width: 40px;
    height: 40px;
    img {
      width: 32px;
      bottom: 0;
      left: 4px;
    }
  }
}

.overlayProjects {
  position: absolute;
  bottom: 6.67dvh;
  right: 0;
  width: 83.33%;
  background-color: $lightBlue;
  padding: clamp(16px, 1.5vw, 1.5vw);
  text-align: justify;
  @media (max-width: 1500px) and (max-height: 800px) {
    width: 101%;
  }
  @media (max-width: 1200px) {
    width: 118%;
  }
  @include respond-to(tablet-landscape) {
    width: 100%;
    right: -16px;
    bottom: 54px;
  }
}

.closeOverlayProjects {
  @include dFlex($jc: flex-end);
  > img {
    height: 17.53px;
    margin: 7.23px;
  }
}

.buttonsFurtherProjectInformations {
  @include dFlex($g: 2.22vw, $jc: flex-start);
  button {
    @include dFlex($g: 4px);
    img {
      height: 20px;
    }
  }
  @media (max-width: 390px) {
    flex-direction: column;
    width: 100%;
    justify-content: center;
    gap: 16px;
    margin-bottom: 8px;
  }
}

.projectChangeButtons {
  width: 100%;
  @include dFlex($jc: space-between);
  font-weight: 700;
  color: $black;
  span {
    font-size: 18px;
    transition: color 100ms ease-in;
    @media (max-width: 410px) {
      font-size: 13px;
    }
    &.hoverEffect {
      cursor: pointer;
      color: $darkOrange;
    }
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        color: $darkOrange;
        cursor: pointer;
      }
    }
  }
}

.fadeWrapper {
  position: relative;
  img {
    position: absolute;
    transition: opacity 200ms ease-in-out;
  }
  img.fade-out {
    animation: fadeOut 200ms forwards;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.bgYellow {
  background-color: $yellow;
}

.bgOrange {
  background-color: $darkOrange;
}

.bgBlue {
  background-color: $lightBlue;
}
