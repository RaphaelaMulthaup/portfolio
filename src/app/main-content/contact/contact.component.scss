@import "./../../../styles.scss";

:host {
  @include respond-to(tablet-landscape) {
    height: auto !important;
  }
}

#contact {
  background-color: $black;
  color: $cream;
  width: 100vw;
  box-sizing: border-box;
  @include respond-to(tablet-landscape) {
    height: auto;
  }
}

.contentMainComponent {
  @include dFlex();
  flex-direction: column;
  @include respond-to(tablet-landscape) {
    padding: 80px 7vw 0 7vw;
  }
  @include respond-to(mobile-portrait) {
    padding-left: 16px;
    padding-right: 16px;
  }
  @include respond-to(mobile-landscape) {
    padding: 12dvh 7vw 0 7vw;
  }
  app-footer {
    width: 100%;
  }
}

.contentContact {
  flex: 1;
  @include dFlex($jc: space-between);
  @include respond-to(tablet-landscape) {
    flex-direction: column;
    gap: clamp(48px, 10vw, 100px);
  }
}

.contactLeftSide {
  flex: 1;
  height: 100%;
  @include dFlex($g: 4dvh, $jc: flex-start);
  flex-direction: column;
  margin-right: 7vw;
  @include respond-to(tablet-landscape) {
    margin: 0;
    gap: clamp(32px, 6vw, 56px);
  }
  h2 {
    color: $yellow;
    @include respond-to(tablet-landscape) {
      margin-bottom: 0;
    }
  }
}

.contactText {
  @include dFlex($ai: flex-start);
  gap: clamp(16px, 1.78dvh, 1.78dvh);
  flex-direction: column;
  h4 {
    color: $darkOrange;
    @include respond-to(mobile-portrait) {
      font-size: 20px;
    }
  }
}

.contactRightSide {
  height: 100%;
  width: 48%;
  @include dFlex($ai: flex-end, $jc: space-between);
  padding-bottom: 8.67dvh;
  box-sizing: border-box;
  flex-direction: column;
  @media (max-width: 1200px) {
    width: 53%;
  }
  @include respond-to(tablet-landscape) {
    flex-direction: column-reverse;
    width: 100%;
    padding-bottom: 96px;
  }
  @include respond-to(mobile-portrait) {
    padding-bottom: 24px;
  }

  .svgWrapper {
    position: relative;
    display: inline-block;
    @include respond-to(tablet-landscape) {
      margin-top: -44px;
    }
    svg {
      path {
        transition: fill 100ms ease-in;
      }

      // Nur auf GerÃ¤ten mit Maus und feinem Pointer aktivieren wir :hover
      @media (hover: hover) and (pointer: fine) {
        &:hover {
          cursor: pointer;
        }

        &:hover path {
          fill: $darkOrange;
        }
      }

      &.hoverEffect {
        cursor: pointer;

        path {
          fill: $darkOrange;
        }
      }
    }

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 0.5px;
      background-color: $black;
      transition: background-color 100ms ease-in;
    }

    @media (hover: hover) and (pointer: fine) {
      &:hover::after {
        background-color: $darkOrange;
      }
    }

    &.hoverEffect::after {
      background-color: $darkOrange;
    }
  }

  > app-form {
    width: 100%;
    max-width: 650px;
    margin-right: 3.33vw;
    @include respond-to(large-desktop) {
      margin-right: 6vw;
    }
    @include respond-to(tablet-landscape) {
      margin-right: 0;
      max-width: none;
    }
  }
}
