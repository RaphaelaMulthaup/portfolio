@import "./../../../../styles.scss";

form {
  @include dFlex();
  flex-direction: column;
  > div {
    width: 100%;
    h4 {
      margin-left: 16px;
      @media (max-width: 1350px) {
        font-size: 21px;
      }
      @media (max-width: 1200px) {
        font-size: 20px;
      }
    }
  }
  > div:first-child {
    @include dFlex($g: 2.22vw);
    margin-bottom: 6.22dvh;
    > div {
      @include dFlex($ai: flex-start);
      flex-direction: column;
      flex: 1;
      &:hover {
        h4 {
          color: $darkOrange;
        }
        input {
          border-color: $darkOrange;
        }
      }
    }
  }
  > div:nth-child(2) {
    margin-bottom: 9dvh;
    &:hover {
      h4 {
        color: $darkOrange;
      }
      > div {
        background-color: $darkOrange;
      }
    }
  }
  > div:nth-child(3) {
    margin-bottom: 16px;
    > div {
      margin-bottom: 8px;
      @include dFlex($g: 4.5px, $ai: flex-start);
      width: 100%;
      > span {
        flex: 1;
        > a {
          text-decoration: none;
          color: $darkOrange;
          &:hover {
            color: $cream;
            font-weight: 700;
          }
        }
      }
    }
  }
}

input[type="text"],
[type="email"],
textarea {
  box-sizing: border-box;
  background-color: transparent;
  border: none;
  border-bottom: 1px solid $yellow;
  color: $cream;
  font-size: 16px;
  width: 100%;
  &::placeholder {
    color: $cream;
    font-size: 16px;
  }
  &:focus {
    outline: none; /* Entfernt den blauen Rand (bei vielen Browsern) */
    border: none; /* Entfernt den eigentlichen Rahmen */
    background-color: transparent;
    border-bottom: 1px solid $darkOrange;
  }
}

input {
  padding: 10px 16px 16px;
  border-bottom: 1px solid $yellow;
  &:focus {
    border-bottom: 1px solid $yellow;
  }
}

.redPlaceholder {
  &::placeholder {
    color: $red !important;
  }
}

.formSection:focus-within h4 {
  color: $darkOrange; /* oder eine andere gewünschte Farbe */
}

.formSection:focus-within .borderDummy {
  background-color: $darkOrange; /* oder eine andere gewünschte Farbe */
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-background-clip: text;
  -webkit-text-fill-color: #ffffff;
  transition: background-color 5000s ease-in-out 0s;
  box-shadow: inset 0 0 20px 20px #23232329;
}

textarea {
  resize: none;
  padding: 8px 16px 16px;
  margin-top: 8px;
  border-bottom: 8px solid $black;
  &:focus {
    border-bottom: 8px solid $black;
  }
}

.borderDummy {
  width: 100%;
  height: 0.5px;
  background-color: #f9af42;
}

/* Versteckt die native Checkbox */
.customCheckbox input[type="checkbox"] {
  display: none;
}

/* Standard-Zustand */
.customCheckbox .checkbox-image {
  display: inline-block;
  width: 20px;
  height: 20px;
  background-image: url("../../../../assets/img/checkboxDefault.png");
  background-size: cover;
  transition: background-image 0.1s;
}

.customCheckbox:hover {
  cursor: pointer;
}

/* Hover (nicht checked) */
.customCheckbox:hover input:not(:checked) + .checkbox-image,
.customCheckbox.hoverEffect input:not(:checked) + .checkbox-image {
  background-image: url("../../../../assets/img/checkboxDefaultHover.png");
}

/* Checked */
.customCheckbox input:checked + .checkbox-image {
  background-image: url("../../../../assets/img/checkboxChecked.png");
}

/* Checked + Hover */
.customCheckbox:hover input:checked + .checkbox-image,
.customCheckbox.hoverEffect input:checked + .checkbox-image {
  background-image: url("../../../../assets/img/chackboxCheckedHover.png");
}

.errorMessageCheckbox {
  color: $red;
}

.greyedOut {
  border-color: $grey;
  color: $grey;
  &:hover {
    cursor: default;
    background-color: transparent;
  }
}
